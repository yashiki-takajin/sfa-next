# Generated by Django 2.0.2 on 2018-11-05 15:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('register', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=20, verbose_name='姓')),
                ('first_name', models.CharField(blank=True, max_length=20, verbose_name='名')),
                ('last_name_kana', models.CharField(blank=True, max_length=20, verbose_name='姓かな')),
                ('first_name_kana', models.CharField(blank=True, max_length=20, verbose_name='名かな')),
                ('post', models.CharField(blank=True, max_length=256, verbose_name='役職')),
                ('customer_name', models.CharField(blank=True, max_length=40, verbose_name='会社名')),
                ('customer_name_kana', models.CharField(blank=True, max_length=40, verbose_name='会社名かな')),
                ('mail_address', models.EmailField(blank=True, max_length=256, verbose_name='メールアドレス')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='電話番号')),
                ('fax_number', models.CharField(blank=True, max_length=15, verbose_name='FAX')),
                ('major_organization', models.CharField(blank=True, max_length=20, verbose_name='大組織')),
                ('middle_organization', models.CharField(blank=True, max_length=20, verbose_name='中組織')),
                ('country', models.CharField(blank=True, max_length=20, verbose_name='国名')),
                ('zip_code', models.CharField(blank=True, max_length=8, verbose_name='郵便番号')),
                ('address1', models.CharField(blank=True, max_length=40, verbose_name='都道府県')),
                ('address2', models.CharField(blank=True, max_length=80, verbose_name='市区町村番地')),
                ('address3', models.CharField(blank=True, max_length=40, verbose_name='ビル名')),
                ('department_name', models.CharField(blank=True, max_length=256, verbose_name='所属')),
                ('mobile_phone_number', models.CharField(blank=True, max_length=15, verbose_name='携帯電話')),
                ('url', models.URLField(blank=True, max_length=512, verbose_name='URL')),
                ('zip_code_2', models.CharField(blank=True, max_length=8, verbose_name='郵便番号2')),
                ('prefectures_2', models.CharField(blank=True, max_length=10, verbose_name='都道府県2')),
                ('city_2', models.CharField(blank=True, max_length=20, verbose_name='市区町村2')),
                ('address_2', models.CharField(blank=True, max_length=80, verbose_name='番地2')),
                ('building_name_2', models.CharField(blank=True, max_length=40, verbose_name='ビル名2')),
                ('office_2', models.CharField(blank=True, max_length=40, verbose_name='事業所2')),
                ('phone_number_2', models.CharField(blank=True, max_length=15, verbose_name='電話番号2')),
                ('fax_number_2', models.CharField(blank=True, max_length=15, verbose_name='FAX2')),
                ('remarks', models.CharField(blank=True, max_length=4096, verbose_name='備考')),
                ('related_flg', models.BooleanField(default=False, verbose_name='関連付けフラグ')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('modified_timestamp', models.DateTimeField(auto_now=True, verbose_name='修正日時')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modifier', to=settings.AUTH_USER_MODEL, verbose_name='修正者')),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='register.Workspace', verbose_name='ワークスペース')),
            ],
            options={
                'verbose_name': '連絡先情報',
                'verbose_name_plural': '連絡先情報',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('0', '訪問'), ('1', '架電（インバウンド）'), ('2', '架電（アウトバウンド）'), ('3', 'メール'), ('4', 'FAX'), ('5', 'DM')], default='0', max_length=20, verbose_name='対応種別')),
                ('target_person', models.CharField(blank=True, help_text='実際に話をした相手の名前を入力してください。', max_length=40, verbose_name='顧客側担当者名')),
                ('contact_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='対応日時')),
                ('tel_number', models.CharField(blank=True, help_text='実際に電話する番号を入力してください。', max_length=15, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='連絡先電話番号')),
                ('mail_address', models.EmailField(blank=True, max_length=256, verbose_name='連絡先メールアドレス')),
                ('called_flg', models.BooleanField(default=False, help_text='顧客と話せた場合のみ場合のみチェックしてください。', verbose_name='架電済みフラグ')),
                ('visited_flg', models.BooleanField(default=False, verbose_name='訪問済みフラグ')),
                ('visit_date_plan', models.DateField(blank=True, null=True, verbose_name='訪問日_予定')),
                ('visit_date_act', models.DateField(blank=True, null=True, verbose_name='訪問日_実績')),
                ('start_time_plan', models.TimeField(blank=True, null=True, verbose_name='訪問開始時刻_予定')),
                ('end_time_plan', models.TimeField(blank=True, null=True, verbose_name='訪問終了時刻_予定')),
                ('start_time_act', models.TimeField(blank=True, null=True, verbose_name='訪問開始時刻_実績')),
                ('end_time_act', models.TimeField(blank=True, null=True, verbose_name='訪問終了時刻_実績')),
                ('remarks', models.TextField(blank=True, max_length=4096, verbose_name='備考')),
                ('delete_flg', models.BooleanField(default=False, verbose_name='削除フラグ')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='対応者')),
            ],
            options={
                'verbose_name': 'コンタクト情報',
                'verbose_name_plural': 'コンタクト情報',
            },
        ),
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporate_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='法人番号')),
                ('optional_code1', models.CharField(blank=True, max_length=16, verbose_name='任意コード1')),
                ('optional_code2', models.CharField(blank=True, max_length=16, verbose_name='任意コード2')),
                ('optional_code3', models.CharField(blank=True, max_length=16, verbose_name='任意コード3')),
                ('customer_name', models.CharField(max_length=40, verbose_name='企業名')),
                ('department_name', models.CharField(blank=True, max_length=256, verbose_name='部署名')),
                ('tel_number1', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='電話番号1')),
                ('tel_number2', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='電話番号2')),
                ('tel_number3', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='電話番号3')),
                ('fax_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='FAX番号')),
                ('mail_address', models.EmailField(blank=True, max_length=256, verbose_name='メールアドレス')),
                ('representative', models.CharField(blank=True, max_length=30, verbose_name='代表者名')),
                ('contact_name', models.CharField(blank=True, max_length=30, verbose_name='担当者名')),
                ('zip_code', models.CharField(blank=True, max_length=8, validators=[django.core.validators.RegexValidator(message='数字のみ入力してください。', regex='^[0-9]+$')], verbose_name='郵便番号')),
                ('address1', models.CharField(blank=True, max_length=40, verbose_name='都道府県')),
                ('address2', models.CharField(blank=True, max_length=40, verbose_name='市区町村番地')),
                ('address3', models.CharField(blank=True, max_length=40, verbose_name='建物名')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, verbose_name='緯度')),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, verbose_name='経度')),
                ('url1', models.URLField(blank=True, max_length=512, verbose_name='企業URL1')),
                ('url2', models.URLField(blank=True, max_length=512, verbose_name='企業URL2')),
                ('url3', models.URLField(blank=True, max_length=512, verbose_name='企業URL3')),
                ('industry_code', models.CharField(blank=True, max_length=40, verbose_name='業種')),
                ('data_source', models.CharField(blank=True, max_length=40, verbose_name='データソース')),
                ('contracted_flg', models.BooleanField(default=False, verbose_name='契約済みフラグ')),
                ('potential', models.IntegerField(verbose_name='ポテンシャル')),
                ('tel_limit_flg', models.BooleanField(default=False, verbose_name='電話禁止フラグ')),
                ('fax_limit_flg', models.BooleanField(default=False, verbose_name='FAX禁止フラグ')),
                ('mail_limit_flg', models.BooleanField(default=False, verbose_name='メール禁止フラグ')),
                ('attention_flg', models.BooleanField(default=False, verbose_name='要注意フラグ')),
                ('related_document_url', models.URLField(blank=True, max_length=512, verbose_name='関連資料URL')),
                ('remarks', models.TextField(blank=True, max_length=4096, verbose_name='備考')),
                ('action_status', models.CharField(blank=True, choices=[('0', '未対応'), ('1', '対応予定'), ('2', '対応中'), ('3', '対応終了')], default='0', max_length=20, verbose_name='対応状況')),
                ('tel_called_flg', models.BooleanField(default=False, verbose_name='電話済みフラグ')),
                ('mail_sent_flg', models.BooleanField(default=False, verbose_name='メール済みフラグ')),
                ('fax_sent_flg', models.BooleanField(default=False, verbose_name='FAX済みフラグ')),
                ('dm_sent_flg', models.BooleanField(default=False, verbose_name='DM送付済みフラグ')),
                ('visited_flg', models.BooleanField(default=False, verbose_name='訪問済みフラグ')),
                ('public_status', models.CharField(choices=[('0', '非公開'), ('1', '閲覧可能'), ('2', '編集可能')], default='0', max_length=1, verbose_name='公開ステータス')),
                ('delete_flg', models.BooleanField(default=False, verbose_name='削除フラグ')),
                ('author', models.CharField(blank=True, max_length=256, verbose_name='作成者')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('modifier', models.CharField(blank=True, max_length=256, verbose_name='修正者')),
                ('modified_timestamp', models.DateTimeField(auto_now=True, verbose_name='修正日時')),
                ('sales_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='営業担当者')),
                ('shared_edit_group', models.ManyToManyField(blank=True, help_text='この顧客情報を編集できるグループを指定します。', related_name='shared_edit_group', to='register.MyGroup', verbose_name='編集可能グループ')),
                ('shared_edit_user', models.ManyToManyField(blank=True, help_text='この顧客情報を編集できるユーザーを指定します。', related_name='shared_edit_user', to=settings.AUTH_USER_MODEL, verbose_name='編集可能ユーザー')),
                ('shared_view_group', models.ManyToManyField(blank=True, help_text='この顧客情報を閲覧できるグループを指定します。', related_name='shared_view_group', to='register.MyGroup', verbose_name='閲覧可能グループ')),
                ('shared_view_user', models.ManyToManyField(blank=True, help_text='この顧客情報を閲覧できるユーザーを指定します。', related_name='shared_view_user', to=settings.AUTH_USER_MODEL, verbose_name='閲覧可能ユーザー')),
                ('workspace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='register.Workspace', verbose_name='ワークスペース')),
            ],
            options={
                'verbose_name': '顧客情報',
                'verbose_name_plural': '顧客情報',
            },
        ),
        migrations.CreateModel(
            name='GoalSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outbound_count', models.IntegerField(null=True, verbose_name='架電（アウトバウンド）件数')),
                ('visit_count', models.IntegerField(null=True, verbose_name='訪問件数')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkspaceEnvironmentSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_phone_call_url', models.CharField(blank=True, max_length=512, verbose_name='IP電話呼び出し用URL')),
                ('google_maps_javascript_api_key', models.CharField(blank=True, help_text='地図を動的に生成するためのAPIキーです。外部から見える場所に設置するため、必ずアプリケーションの制限（HTTPリファラー）を設定してください。', max_length=128, verbose_name='Google Maps JavaScript API用のキー')),
                ('google_maps_web_service_api_key', models.CharField(blank=True, help_text='住所から緯度経度を取得するためのAPIキーです。HTTPリファラーを設定していると動作しません。', max_length=128, verbose_name='Google Maps Geocoding API用のキー')),
                ('webhook_url1', models.CharField(blank=True, help_text='顧客情報の任意コード1を用いて外部システムを呼び出すときに設定します。', max_length=512, verbose_name='外部連携用URL1')),
                ('webhook_url2', models.CharField(blank=True, help_text='顧客情報の任意コード2を用いて外部システムを呼び出すときに設定します。', max_length=512, verbose_name='外部連携用URL2')),
                ('webhook_url3', models.CharField(blank=True, help_text='顧客情報の任意コード3を用いて外部システムを呼び出すときに設定します。', max_length=512, verbose_name='外部連携用URL3')),
                ('workspace', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='register.Workspace')),
            ],
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='target_customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sfa.CustomerInfo', verbose_name='対象顧客'),
        ),
    ]
