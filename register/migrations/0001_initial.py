# Generated by Django 2.0.2 on 2018-11-05 15:46

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import register.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_workspace_active', models.BooleanField(default=False, help_text='所属するワークスペースへの登録状況を管理します。無効にすると仮登録、有効にすると本登録状態となります。', verbose_name='ワークスペース有効')),
                ('workspace_role', models.CharField(choices=[('0', '一般ユーザー'), ('1', '管理者'), ('2', 'オーナー')], default='0', max_length=1, verbose_name='ワークスペース権限')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', register.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=40, verbose_name='グループ名')),
            ],
            options={
                'verbose_name': 'グループ',
                'verbose_name_plural': 'グループ',
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workspace_name', models.CharField(max_length=40, unique=True, verbose_name='ワークスペース名')),
                ('my_group', models.ManyToManyField(blank=True, help_text='Specific group for this workapce.', to='register.MyGroup', verbose_name='グループ')),
            ],
            options={
                'verbose_name': 'ワークスペース',
                'verbose_name_plural': 'ワークスペース',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='my_group',
            field=models.ManyToManyField(blank=True, help_text='Specific Group for this user.', related_name='group_set', to='register.MyGroup', verbose_name='グループ'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='workspace',
            field=models.ForeignKey(blank=True, help_text='このユーザーが所属するワークスペースです。', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_set', related_query_name='user', to='register.Workspace', verbose_name='ワークスペース'),
        ),
    ]
